---
name: production
kind: pipeline
type: docker

concurrency:
  limit: 1

environment:
  MIX_ENV: prod

steps:
  - name: elixir deps get
    image: elixir:1.11
    volumes:
    - name: mix-temp
      path: /root/.mix
    commands:
    - mix do local.hex --force, local.rebar --force
    - mix deps.get --only $MIX_ENV

  - name: npm assets
    image: node:lts-alpine
    depends_on:
    - elixir deps get
    volumes:
    - name: npm-temp
      path: /root/.npm
    commands:
    - npm install --prefix assets
    - npm run deploy --prefix assets
  
  - name: elixir deps compile
    image: elixir:1.11
    depends_on:
    - npm assets
    volumes:
    - name: mix-temp
      path: /root/.mix
    commands:
    - mix deps.compile

  - name: digest
    depends_on:
    - elixir deps compile
    image: elixir:1.11
    volumes:
    - name: mix-temp
      path: /root/.mix
    commands:
    - cd /drone/src
    - mix phx.digest

  - name: assemble release
    depends_on:
    - digest
    image: elixir:1.11
    volumes:
    - name: mix-temp
      path: /root/.mix
    commands:
    - mix release
    environment:
      MIX_ENV: prod

  - name: dockerfile build
    depends_on:
    - assemble release
    image: plugins/docker
    settings:
      repo: registry.km8.es/rollup-test
      tags: 
      - "latest"
      # - "${DRONE_TAG}"
      registry: registry.km8.es
      username:
        from_secret: docker_repo_user
      password:
        from_secret: docker_repo_password
      build_args:
      - MIX_ENV=prod

  - name: deploy
    depends_on:
      - dockerfile build
    image: appleboy/drone-ssh        
    settings:
      host: 10.0.0.9
      port: 22
      username:
        from_secret: web-01_ssh_user
      key:
        from_secret: web-01_ssh_key
      passphrase:
        from_secret: web-01_ssh_passphrase
      script:
      - cd /srv/docker/rollup-test
      - docker-compose down
      - docker-compose pull
#      - docker-compose up -d

volumes:
  - name: mix-temp
    temp: {}
  - name: npm-temp
    temp: {}